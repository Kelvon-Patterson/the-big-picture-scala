[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kelvon.patterson\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kelvon.patterson\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 11.0.14)
[debug]       Load.loadUnit: plugins took 81.9625ms
[debug]       Load.loadUnit: defsScala took 0.2694ms
[debug] [Loading] Scanning directory C:\Users\kelvon.patterson\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kelvon.patterson\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2375 ms
[debug]           Load.resolveProject(global-plugins) took 43.0858ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kelvon.patterson\.sbt\1.0\plugins, plugins: List(<none>))) took 88.0003ms
[debug] [Loading] Done in C:\Users\kelvon.patterson\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 108.5029ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1846ms
[debug]     Load.loadUnit(file:/C:/Users/kelvon.patterson/.sbt/1.0/plugins/, ...) took 199.1243ms
[debug]   Load.apply: load took 329.1285ms
[debug]   Load.apply: resolveProjects took 5.2692ms
[debug]   Load.apply: finalTransforms took 43.4453ms
[debug]   Load.apply: config.delegates took 6.7347ms
[debug]   Load.apply: Def.make(settings)... took 296.1869ms
[debug]   Load.apply: structureIndex took 77.5815ms
[debug]   Load.apply: mkStreams took 1.8719ms
[info] loading global plugins from C:\Users\kelvon.patterson\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1697.8929ms
[debug]           Load.loadUnit: plugins took 21.1789ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight\project
[debug]             Load.loadUnit: mkEval took 6.1267ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1795 ms
[info] loading settings for project big_picture_pluralsight-build from idea.sbt ...
[debug]               Load.resolveProject(big_picture_pluralsight-build) took 3.2235ms
[debug]             Load.loadTransitive: finalizeProject(Project(id big_picture_pluralsight-build, base: C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight\project, plugins: List(<none>))) took 4.8859ms
[debug] [Loading] Done in C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight\project, returning: (big_picture_pluralsight-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1909.0357ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6247ms
[debug]         Load.loadUnit(file:/C:/Users/kelvon.patterson/Downloads/LSL-P-lightbend-scala-language-professional/Big_Picture_Pluralsight/project/, ...) took 1935.7294ms
[debug]       Load.apply: load took 1937.2897ms
[debug]       Load.apply: resolveProjects took 0.3922ms
[debug]       Load.apply: finalTransforms took 9.5144ms
[debug]       Load.apply: config.delegates took 0.4484ms
[debug]       Load.apply: Def.make(settings)... took 79.5708ms
[debug]       Load.apply: structureIndex took 17.4896ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9665.0306ms
[debug]     Load.loadUnit: defsScala took 0.0015ms
[debug] [Loading] Scanning directory C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight
[debug]       Load.loadUnit: mkEval took 0.2209ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.651 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 20.0681ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight, plugins: List(<none>))) took 23.3376ms
[debug] [Loading] Done in C:\Users\kelvon.patterson\Downloads\LSL-P-lightbend-scala-language-professional\Big_Picture_Pluralsight, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 905.5582ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.5813ms
[debug]   Load.loadUnit(file:/C:/Users/kelvon.patterson/Downloads/LSL-P-lightbend-scala-language-professional/Big_Picture_Pluralsight/, ...) took 10581.7708ms
[debug] Load.apply: load took 10583.4154ms
[debug] Load.apply: resolveProjects took 0.1162ms
[debug] Load.apply: finalTransforms took 22.2143ms
[debug] Load.apply: config.delegates took 0.322ms
[debug] Load.apply: Def.make(settings)... took 62.9048ms
[debug] Load.apply: structureIndex took 43.7797ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to Big_Picture_Pluralsight (in build file:/C:/Users/kelvon.patterson/Downloads/LSL-P-lightbend-scala-language-professional/Big_Picture_Pluralsight/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60046 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60046, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Big_Picture_Pluralsight (in build file:/C:/Users/kelvon.patterson/Downloads/LSL-P-lightbend-scala-language-professional/Big_Picture_Pluralsight/)
[debug] > Exec(idea-shell, None, None)
